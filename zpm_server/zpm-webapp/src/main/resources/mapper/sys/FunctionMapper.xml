<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zp.sys.dao.FunctionMapper">

  <select id="getFuncId" resultType="int">
  	SELECT max(func_id) FROM t_function
  </select>
  
  <select id="getMainMenuList" parameterType="int" resultType="com.zp.sys.entity.Function">
    SELECT DISTINCT 
    	f.func_id as funcId,
    	f.func_name as funcName,
    	f.image,
    	f.url,
    	f.qtip,
    	f.sort_num,
    	f.parent_func_id
    FROM t_function f
    where parent_func_id is null and func_id != -1
    ORDER BY sort_num
  </select>
   <select id="getMainMenuList2" parameterType="map" resultType="com.zp.sys.entity.Function">
    SELECT DISTINCT 
    	f.func_id as funcId,
    	<if test="language != null and language != '' and language=='zh'">
               f.func_name as funcName,
        </if>
    	<if test="language != null and language != '' and language=='en'">
               f.en_func_name as funcName,
        </if>
        <if test="language == null or language == '' ">
               f.func_name as funcName,
        </if>
    	f.image,
    	f.url,
    	f.qtip,
    	f.sort_num,
    	f.parent_func_id
    FROM t_function f
    LEFT JOIN t_func_role fr ON(f.func_id  = fr.func_id)
	LEFT JOIN t_user_role ur ON(fr.role_id = ur.role_id)
	WHERE ur.user_id=#{userId}
    and f.parent_func_id is null and f.func_id != -1
    ORDER BY sort_num
  </select>
  <select id="getSubMenuList" parameterType="map" resultType="com.zp.sys.entity.Function">
    SELECT DISTINCT 
    	f.func_id as funcId,
    	<if test="language != null and language != '' and language=='zh'">
               f.func_name as funcName,
        </if>
    	<if test="language != null and language != '' and language=='en'">
               f.en_func_name as funcName,
        </if>
        <if test="language == null or language == '' ">
               f.func_name as funcName,
        </if>
    	f.image,
    	f.url,
    	f.qtip,
    	f.sort_num,
    	f.parent_func_id
    FROM t_function f
    LEFT JOIN t_func_role fr ON(f.func_id  = fr.func_id)
	LEFT JOIN t_user_role ur ON(fr.role_id = ur.role_id)
	WHERE ur.user_id=#{userId}
	and  f.parent_func_id=#{id} 
	AND f.type = '1' 
	ORDER BY sort_num
  </select>
    <select id="getSubButtonList" parameterType="map" resultType="com.zp.sys.entity.Function">
    SELECT 
    	f.func_id as funcId,
    	<if test="language != null and language != '' and language=='zh'">
               f.func_name as funcName,
        </if>
    	<if test="language != null and language != '' and language=='en'">
               f.en_func_name as funcName,
        </if>
        <if test="language == null or language == '' ">
               f.func_name as funcName,
        </if>
    	f.image,
    	f.url,
    	f.qtip,
    	f.sort_num,
    	f.parent_func_id,
    	f.func_css as css
    FROM t_function f
	LEFT JOIN t_func_role fr ON(f.func_id  = fr.func_id)
	LEFT JOIN t_user_role ur ON(fr.role_id = ur.role_id)
	WHERE ur.user_id=#{userId}
		AND f.parent_func_id=#{id} 
		AND f.type = '0' 
	ORDER BY sort_num
  </select>
  <select id="getOrderByUserId" parameterType="int" resultType="com.zp.sys.entity.Function">
  	    SELECT 
    	f.func_id as funcId,
    	f.func_name as funcName,
    	f.image,
    	f.url,
    	f.qtip,
    	f.sort_num,
    	f.parent_func_id,
    	f.func_css as css
    FROM t_function f
	LEFT JOIN t_func_role fr ON(f.func_id  = fr.func_id)
	LEFT JOIN t_user_role ur ON(fr.role_id = ur.role_id)
	WHERE ur.user_id=#{userId}
		AND f.parent_func_id=8
		AND f.type = '0' 
	ORDER BY sort_num
  </select>
  <select id="getOrderByUserId2" parameterType="int" resultType="com.zp.sys.entity.Function">
  	    SELECT DISTINCT
    	f.func_id as funcId,
    	<if test="language != null and language != '' and language=='zh'">
               f.func_name as funcName,
        </if>
    	<if test="language != null and language != '' and language=='en'">
               f.en_func_name as funcName,
        </if>
        <if test="language == null or language == '' ">
               f.func_name as funcName,
        </if>
    	f.image,
    	f.url,
    	f.qtip,
    	f.sort_num,
    	f.parent_func_id,
    	f.func_css as css
    FROM t_function f
	LEFT JOIN t_func_role fr ON(f.func_id  = fr.func_id)
	LEFT JOIN t_user_role ur ON(fr.role_id = ur.role_id)
	WHERE ur.user_id=#{userId}
		AND f.parent_func_id=8
		AND f.type = '0' 
	ORDER BY sort_num
  </select>
  <select id="getOperationsByUserId" parameterType="map" resultType="com.zp.sys.entity.Function">
  	    SELECT DISTINCT
    	f.func_id as funcId,
    	<if test="language != null and language != '' and language=='zh'">
               f.func_name as funcName,
        </if>
    	<if test="language != null and language != '' and language=='en'">
               f.en_func_name as funcName,
        </if>
        <if test="language == null or language == '' ">
               f.func_name as funcName,
        </if>
    	f.image,
    	f.url,
    	f.qtip,
    	f.sort_num,
    	f.parent_func_id,
    	f.func_css as css
    FROM t_function f
	LEFT JOIN t_func_role fr ON(f.func_id  = fr.func_id)
	LEFT JOIN t_user_role ur ON(fr.role_id = ur.role_id)
	WHERE ur.user_id=#{userId}
		AND f.parent_func_id=#{parentFuncId}
		AND f.type = '0' 
	ORDER BY sort_num
  </select>
  <select id="getAnalysisByUserId" parameterType="int" resultType="com.zp.sys.entity.Function">
  	    SELECT 
    	f.func_id as funcId,
    	f.func_name as funcName,
		f.description,
    	f.url
    FROM t_function f
	LEFT JOIN t_func_role fr ON(f.func_id  = fr.func_id)
	LEFT JOIN t_user_role ur ON(fr.role_id = ur.role_id)
	WHERE ur.user_id=#{userId}
		AND f.parent_func_id=11
		AND f.type = '0' 
	ORDER BY sort_num
  </select>
  
  <select id="getRoleFuncList" parameterType="Long" resultType="com.zp.sys.entity.Function">
    SELECT
    	f.func_id as funcId,
    	f.func_name as funcName,
    	f.image,
    	f.url,
    	f.qtip,
    	f.sort_num,
    	f.parent_func_id
    FROM t_function f
    LEFT JOIN t_func_role fr ON(f.func_id  = fr.func_id)
	LEFT JOIN t_user_role ur ON(fr.role_id = ur.role_id)
	WHERE ur.user_id=#{userId}
  </select>
  
  <select id="getMenuList" resultType="com.zp.sys.entity.Function">
  	SELECT 
  		menu_id as menuId,
  		menu_name as menuName
  	FROM t_menu
  </select>
  
  <select id="getMenus" resultType="com.zp.sys.entity.Function">
  	SELECT 
  		a.menu_id as menuId,
  		a.menu_name as menuName,
  		a.url,
  		a.sort_num,
  		a.parent_id,
  		a.description,
        b.menu_name as parent_menu
  	FROM t_menu a 
  	LEFT JOIN t_menu b ON(a.parent_id=b.menu_id)
  </select>
  
  <select id="getParentMenus" resultType="com.zp.sys.entity.Function">
  	SELECT 
  		menu_id as menuId,
  		menu_name as menuName
  	FROM t_menu a 
  	WHERE parent_id is null
  </select>
  
  <insert id="insertMenu" parameterType="com.zp.sys.entity.Function" >
  	INSERT INTO t_menu (menu_id, menu_name, image, url, qtip, sort_num, parent_id, description)
    VALUES (#{menuId}, #{menuName}, #{image}, #{url}, #{qtip}, #{sort_num}, #{parent_id}, #{description})
  </insert>
  
  <update id="updateMenu"  parameterType="com.zp.sys.entity.Function">
	UPDATE t_menu
	<set>
		<if test="menuName != null">menu_name=#{menuName},</if>
		<if test="url != null">url=#{url},</if>
		<if test="sort_num != null">sort_num=#{sort_num},</if>
		<if test="description != null">description=#{description},</if>
		<if test="parent_id != null">parent_id=#{parent_id}</if>
	</set>
	WHERE menu_id=#{menuId} 
  </update>
  
  <delete id="deleteMenu"  parameterType="map">
  	DELETE FROM t_menu WHERE menu_id=#{menuId}
  </delete>
  
  <select id="getAppFuncByUserId" parameterType="Map" resultType="Function">
select t.func_type as appFuncType,GROUP_CONCAT(t.func_id) as appFuncStr from app_function_config t 
where t.interface_code='applogin' and t.user_type_id = #{userTypeId} group by t.func_type
 </select>
  
</mapper>