<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zp.sys.dao.UserMapper">

  <select id="listPageOfUser2" parameterType="com.zp.sys.entity.User" resultMap="userResult" >
  	select t.user_id as userId,shipToParty,
	user_name as userName,
	real_name as  realName,
	t.create_date as createDate,
	contact_phone as contactPhone,
	user_email as email,
	t.state_cd as stateCd,
	city_id as cityId,
	r.role_name as roleName
 	from t_user t,t_role r,t_user_role a where t.user_id=a.user_id and r.role_id=a.role_id
 	<if test="null!=contactPhone and ''!=contactPhone">
 	and t.contact_phone like '%${contactPhone}%'
 	</if>
 	<if test="'00F' != stateCd and null != stateCd and '' != stateCd">
 	and t.state_cd = #{stateCd}
 	</if>
 	<if test="null != userName and '' != userName">
 	and t.user_name like '%${userName}%'
 	</if>
 	<if test="null!=roleId and ''!=roleId">
 	and EXISTS (SELECT 1 FROM t_user_role r where r.role_id= #{roleId} AND r.user_id=t.user_id)
 	</if>
 	order by t.create_date desc
  </select>

<update id="jinUser" parameterType="map">
 UPDATE  t_user set state_cd = '00X' where user_id = #{userId}
</update>

<update id="recUser" parameterType="map">
 UPDATE  t_user set state_cd = '00A' where user_id = #{userId}
</update>

 <insert id="addUser" parameterType="com.zp.sys.entity.User">
  	 <selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">  
       SELECT SEQ_TEST.Nextval as userId from DUAL  
   </selectKey>  
  	INSERT INTO t_user (user_id,user_name,real_name,password,create_date,contact_phone,state_cd,user_email,head_image,endEdit_pwd_time,city_id)
    VALUES (#{userId},#{userName},#{realName}, #{password},now(),#{contactPhone},'00A',#{email},'toux-a.png',now(),#{cityId})
  </insert>
  
  <select id="getUserById" parameterType="map" resultType="com.zp.sys.entity.User">
  select user_id as userId,shipToParty,
	user_name as userName,
	real_name as  realName,
	password as password,
	create_date as createDate,
	contact_phone as contactPhone,
	user_email as email,
	state_cd as stateCd,
	head_image as headImage,
	city_id as cityId 
 	from t_user t where user_id = #{userId}
  </select>
  
  <select id="getUserByName" parameterType="map" resultType="com.zp.sys.entity.User">
  select user_id as userId,shipToParty,
	user_name as userName,
	real_name as  realName,
	password as password,
	create_date as createDate,
	contact_phone as contactPhone,
	user_email as email,
	state_cd as stateCd,
	city_id as cityId 
 	from t_user t where user_name = #{userName}
  </select>
  
  <select id="getclnumber" parameterType="map" resultType="com.zp.sys.entity.User">
  SELECT COUNT(CASE WHEN handel_type='2' then 1 end)as collect,
  COUNT(CASE WHEN handel_type='1' then 1 end)as loading
  from document_extend where user_id = #{userId}
  </select>
  
  <select id="getuploadsum" parameterType="map" resultType="com.zp.sys.entity.User">
  select COUNT(*) as uploadsum from document_info where user_id = #{userId}
  
  </select>
  
  <select id="getnoticesum" parameterType="map" resultType="com.zp.sys.entity.User">
  select count(*) as noticesum from sys_notice_user where user_id = #{userId}
  
  </select>
  
  <update id="updateUser"  parameterType="com.zp.sys.entity.User">
	UPDATE t_user
	<set> 
	<if test="endEdit_pwd_time != null and endEdit_pwd_time != ''">endEdit_pwd_time=#{endEdit_pwd_time,jdbcType=TIMESTAMP},</if>
		user_name=#{userName},
		password=#{password},
		contact_phone=#{contactPhone},
		real_name=#{realName},
		user_email=#{email},
		city_id=#{cityId}	
	</set>
	WHERE user_id=#{userId} 
  </update>
  
  <update id="wkedituserinfo" parameterType="com.zp.sys.entity.User">
   update t_user
   <set>
        real_name = #{realName},
        contact_phone = #{contactPhone},
        user_email=#{email}
   </set>
   where user_id = #{userId}
  </update>
  
  <update id="wkeditpassword" parameterType="com.zp.sys.entity.User">
     update t_user
  <set>
     password = #{password}
  </set>
    where user_id = #{userId}
  </update>
  
  <select id="wkgetmyinfomationlistPage" parameterType="map" resultType="com.zp.sys.entity.User">
  SELECT a.id as noticeId,
  a.user_id,
  a.notice_title as noticeTitle,
  a.notice_content as noticeContent,
  a.create_time as create_time,
  a.status_time as staus_time,
  a.is_read as isRead,
  a.send_object as sendObject,
  a.col2 as smallTitle,
  a.state_cd as noticeStatecd
   from sys_notice a where a.id  in (SELECT notice_id from sys_notice_user where user_id = #{userId}) and a.state_cd ='00A' and a.send_object ='p' 
   ORDER BY create_time DESC
  </select>
  
  <select id="wkgetcompanynoticelistPage" resultType="com.zp.sys.entity.User" parameterType="map">
  SELECT a.id as noticeId,
  a.user_id,
  a.notice_title as noticeTitle,
  a.notice_content as noticeContent,
  a.create_time as create_time,
  a.status_time as staus_time,
  a.is_read as isRead,
  a.send_object as sendObject,
  a.col2 as smallTitle,
  a.state_cd as noticeStatecd
   from sys_notice a where a.state_cd ='00A' and a.send_object ='A'
   <if test="2 == timechoose">
   and  DATE_SUB(CURDATE(), INTERVAL 7 day) &lt;= date(a.create_time)
   </if>
   <if test="3 == timechoose">
   and  DATE_SUB(CURDATE(), INTERVAL 30 day) &lt;= date(a.create_time)
   </if>
   <if test=" 4 == timechoose">
   and  DATE_SUB(CURDATE(), INTERVAL 90 day) &lt;= date(a.create_time)
   </if>
   ORDER BY create_time DESC
  </select>
  
  <update id="clearallinfo" parameterType="map">
  UPDATE sys_notice a SET a.state_cd = '00X' where a.id in (SELECT notice_id from sys_notice_user where user_id = #{userId})
  </update>
  
  <update id="chooseclearinfo" parameterType="map">
  UPDATE sys_notice a SET a.state_cd = '00X' where a.id = #{noticeId}
  </update>
  
 
 
 
  
  <select id="getreadsum" parameterType="com.zp.sys.entity.User" resultType="User">
  select COUNT(1) as readsum from document_read where user_id = #{userId}
  </select>
  
  <select id="wkreadrecord" parameterType="com.zp.sys.entity.User" resultType="User">
 SELECT d.id,(SELECT q.page_number from document_info q where d.document_id = q.id) as pageNumber,d.document_id as docid,(SELECT b.file_name from document_info b where b.id = d.document_id)as fileName,
 (SELECT c.file_path from document_info c where c.id = d.document_id) as filePath ,
 (SELECT c.swf_path from document_info c where c.id = d.document_id) as swfPath ,d.time FROM document_read d WHERE d.id in(SELECT GROUP_CONCAT(id ORDER BY time DESC)FROM document_read WHERE user_id =#{userId} GROUP BY document_read.document_id) ORDER BY d.time DESC LIMIT 0,2
  </select>
  
 
  
  <select id="wkredpoint" resultType="int" parameterType="com.zp.sys.entity.User">
  SELECT COUNT(1) as noRead_number from sys_notice where id  not in 
  (SELECT notice_id from sys_notice_record where user_id = #{userId}) and send_object ='A'
  
  </select>
  
  <select id="wkjudgenoticerecord" resultType="int" parameterType="com.zp.sys.entity.User">
   SELECT COUNT(1) from sys_notice_record where notice_id = #{noticeId} and user_id = #{userId}
  </select>
  
  <insert id="wkinsertnoticerecord" parameterType="com.zp.sys.entity.User">
  insert into sys_notice_record(notice_id,user_id)
  values(#{noticeId},#{userId})
  </insert>
  
  <select id="getnoticelistPage" parameterType="map" resultType="com.zp.sys.entity.User">
  SELECT id as noticeId,(SELECT t.real_name from t_user t where t.user_id = a.user_id) as realName,notice_title as noticeTitle,
  notice_content as noticeContent,create_time as create_time,send_object as sendObject,col2 as smallTitle,state_cd as noticeStatecd,
  (SELECT (SELECT h.real_name from t_user h where h.user_id = s.user_id) from sys_notice_user s where s.notice_id= a.id ) 
  as bName from sys_notice a 
  <where>
  <if test="null != realName and '' != realName">
  user_id = (select user_id from t_user where real_name =#{realName})
  </if>
  </where>
  order by create_time DESC
  </select>
  
  <select id="getbName" resultType="com.zp.sys.entity.User" parameterType="map">
  SELECT user_id as userId,user_name as userName,real_name as realName from t_user where user_id != #{userId}
  </select>
  
  <insert id="insertnotice1" parameterType="map">
  INSERT INTO sys_notice(user_id,notice_title,notice_content,create_time,send_object,col2,state_cd)
  VALUES(#{userId},#{noticeTitle},#{noticeContent},now(),#{sendObject},#{smallTitle},'00A')
  </insert>
  
  <insert id="insertnotice2" parameterType="map">
  insert into sys_notice_user(notice_id,user_id)
  values((SELECT id as id from sys_notice ORDER BY id DESC LIMIT 1),#{buserId})
  </insert>
  
  <delete id="delnotice1" parameterType="map">
   delete  from sys_notice where id = #{noticeId}
  </delete>
  
  <delete id="delnotice2" parameterType="map"> 
  delete  from sys_notice_record where notice_id = #{noticeId}
  </delete>
  
   <update id="updateUserImage" parameterType="map">
		update t_user set head_image=#{headImage} where user_id=#{userId}
	</update>
<!-- /////////////////////////////////////////////如意/////////////////////////////////////////// -->
  <select id="getUserId" resultType="Long">
  	SELECT max(user_id) FROM t_user
  </select>
  
  <select id="login" parameterType="java.util.Map"  resultType="com.zp.sys.entity.User">
    SELECT user_id as userId,user_name as userName,password,create_date,real_name as realName,rg_type as rgType,
    head_image as headImage,app_last_login_time as appLastLoginTime,token,state_cd as stateCd,
    endEdit_pwd_time
    FROM t_user WHERE  user_name = #{name} AND  password = #{password} 
  </select>
  
  <select id="wklogin" parameterType="map" resultType="com.zp.sys.entity.User">
    SELECT user_id as userId,user_name as userName,password,create_date,real_name as realName,rg_type as rgType,
    user_type as userType,head_image as headImage,app_last_login_time as appLastLoginTime,token,state_cd as stateCd,
    endEdit_pwd_time,city_id as cityId,
    (select group_concat(role_id) from t_user_role where user_id = t.user_id) as roleId,
    (select NAME from t_province_city where id=city_id) as cityName 
    FROM t_user t WHERE  user_name = #{name} AND  password = #{password}
  </select>
  
  <select id="getUser" parameterType="map" resultType="com.zp.sys.entity.User">
    SELECT
    	user_id as userId,
    	user_name as userName,
   		password,
    	create_date
    FROM t_user
    <where>
    	<if test="id != null">
    		user_id = #{id}
    	</if>
    	<if test="name != null">
    		AND user_name = #{name}
    	</if>
    	<if test="password != null">
    		AND password = #{password}
    	</if>
    </where>
  </select>
  
  <select id="getUserNameList" resultType="hashmap">
  	SELECT user_id as userId,user_name as userName FROM t_user
  </select>
  
  <select id="getUserNameById" resultType="String" parameterType="map">
  	SELECT user_name as userName FROM t_user where user_id = #{user_id}
  </select>
  
  <resultMap id="userResult"  type="com.zp.sys.entity.User">
		<id property="userId"  column="user_id" />
		<result property="userName" column="user_name"/>
		<result property="createDate" column="create_date"/>
		<result property="contactPhone" column="contact_phone" />
		<result property="email" column="user_email" />
		<result property="stateCd" column="state_cd" />
		<result property="realName" column="real_name"/>
		<!-- <result property="userType" column="user_type" /> -->
		<result property="provinceName" column="provinceName" />
		<result property="cityName" column="cityName" />
		<result property="typeName" column="typeName"/>
		<result property="listRoleName" column="listRoleName"/>
  </resultMap>
  
 
  
  <insert id="insertUserRole" parameterType="map">
  	INSERT INTO t_user_role (user_id,role_id)
    VALUES (#{userId}, #{roleId})
  </insert>
  
  <select id="getuserId" resultType="Long">
  SELECT LAST_INSERT_ID();
  </select>
  
  
  
  <update id="updateUserRole"  parameterType="map"> 
	UPDATE t_user_role SET
	role_id=#{roleId}
	WHERE user_id=#{userId}
  </update>
  
  <delete id="deleteUser"  parameterType="map">
  	DELETE FROM t_user WHERE user_id=#{userId}
  </delete>
  
  <delete id="deleteUserRole"  parameterType="map">
  	DELETE FROM t_user_role WHERE user_id=#{userId}
  </delete>
  
  <update id="changeUserPassword"  parameterType="map"> 
	UPDATE t_user SET password=#{newPassword} WHERE user_id=#{userId}
  </update>
  
  <select id="listPageOfUser" parameterType="map" resultMap="userResult" >
    select user_id as userId,shipToParty,
	user_name as userName,
	real_name as  realName,
	create_date as createDate,
	contact_phone as contactPhone,
	user_email as email,
	state_cd as stateCd,
	city_id as cityId,
  	(select a.NAME from t_province_city a where a.id = (select b.uid from t_province_city b where b.id = t.city_id)) as provinceName,
	(SELECT NAME FROM t_province_city a WHERE a.id = city_id) AS cityName,
  	(select group_concat(a.role_name) from t_role a,t_user_role b where a.role_id = b.role_id
	AND t.user_id = b.user_id) as listRoleName,
	(select GROUP_CONCAT(c.cust_name) FROM t_cust c WHERE c.cust_id IN (SELECT cust_id FROM t_cs_cust_rela r WHERE t.user_id = r.user_id  and t.user_type = '5')) AS custNames 
 	from t_user t  where 1=1 
    <if test="userName != null">
    	AND (user_name like '%${userName}%' or real_name like '%${userName}%') 
    </if>
    <if test="null!=contactPhone and ''!=contactPhone">
    	and t.contact_phone like '%${contactPhone}%'
    </if>
	<if test="null!=roleId and ''!=roleId">
	 	and EXISTS (SELECT 1 FROM t_user_role r where r.role_id=${roleId} AND r.user_id=t.user_id)
	</if>
    order by create_date desc
  </select>
  
  
  
  <update id="updateState" parameterType="com.zp.sys.entity.User">
  		UPDATE t_user SET
  		<if test="stateCd.equals('00A')">state_cd = '00X'</if>
  		<if test="stateCd.equals('00X')">state_cd = '00A'</if>
  		where user_id=#{userId}
  </update>
  
  <resultMap id="userResultOne"  type="com.zp.sys.entity.User">
		<id property="userId"  column="user_id" />
		<result property="userName" column="user_name"/>
		<result property="password" column="password" />
		<result property="createDate" column="create_date"/>
		<result property="contactPhone" column="contact_phone" />
		<result property="cityId" column="city_id" />
		<result property="email" column="user_email" />
		<result property="rgType" column="rg_type" />
		<result property="stateCd" column="state_cd" />
		<!-- <result property="userType" column="user_type" /> -->
		<result property="customerId" column="customer_id" />
		<result property="headImage" column="head_image" />
		<result property="roleName" column="role_name" />
  </resultMap>
  <update id="editUser" parameterType="com.zp.sys.entity.User">
  	UPDATE t_user SET user_name=#{userName}, is_manageby=#{isManageBy},rg_type=#{rgType},customer_id=#{customerId},
  	<if test="password !=null and password!=''">
  		password=#{password},
  	</if>
  	cust_id=#{custId},real_name=#{realName},contact_phone=#{contactPhone},user_email=#{email},city_id=#{cityid},shipToParty=#{shipToParty}
     where user_id=#{userId}
  </update>
 
 <select id="findTypeList" resultType="com.zp.sys.entity.UserType">
 	select type_id as typeId,type_name as typeName from t_user_type where col1='1'
 </select>
 
 <delete id="deleteRoleUser" parameterType="com.zp.sys.entity.User">
 	delete from t_user_role where user_id=#{userId}
 </delete>
  <delete id="deleteStoreUser" parameterType="com.zp.sys.entity.User">
 	delete from sh_user_store_rela where user_id=#{userId}
 </delete>
 
 <select id="validateUserPassWord" parameterType="Map" resultType="com.zp.sys.entity.User">
    SELECT
   		password 
    FROM t_user
    WHERE app_key = #{appKey} and password = #{oldPassWord}
  </select>
  
 <update id="updateAppPassWord"  parameterType="Map"> 
	UPDATE t_user
	<set> 
		<if test="newPassWord != null">password=#{newPassWord}</if> 
	</set>
	WHERE app_key=#{appKey} 
  </update>
	
	<update id="changeUserPwd" parameterType="com.zp.sys.entity.User">
		update t_user set password=#{password} where user_id=#{userId}
	</update>
	
	<select id="findUserByUserName" parameterType="String" resultType="String">
		select user_name from t_user where user_name=#{userName}
	</select>
	
	<update id="updateLastLogin" parameterType="com.zp.sys.entity.User">
		update t_user set app_last_login_time=#{appLastLoginTime} where user_id=#{userId}
	</update>
	
	<update id="updateUserHeadImage" parameterType="com.zp.sys.entity.User">
		update t_user set head_image=#{headImage} where user_id=#{userId}
	</update>
	
	<!-- <select id="getTypeNameByTypeId" parameterType="int" resultType="String">
		select type_name from t_user_type where type_id=${_parameter}
	</select> -->
	
  <select id="exportListOfUser" parameterType="map" resultMap="userResult" >
    select user_id as userId,
	user_name as userName,
	real_name as  realName,
	create_date as createDate,
	contact_phone as contactPhone,
	user_email as email,
	state_cd as stateCd,
	city_id as cityId,
	(case state_cd when '00A' then '有效' else '无效' end) as stateName,
	(select a.cust_name from t_cust a where a.cust_id = t.cust_id) as custName,
	customer_id as customerId,
	(select c.delivery_point_address from sh_delivery_user b,sh_delivery_point c where 
	 t.user_id = b.user_id and b.deliveryPoint_id = c.delivery_point_id limit 1) as address,
  (select a.NAME from t_province_city a where a.id = (select b.uid from t_province_city b where b.id = t.city_id)) as provinceName,
	(SELECT NAME FROM t_province_city a WHERE a.id = city_id) AS cityName,
  (select group_concat(a.role_name) from t_role a,t_user_role b where a.role_id = b.role_id
		AND t.user_id = b.user_id) as listRoleName
 	from t_user t  where 1=1  
    	<if test="userName != null">
    		AND (user_name like '%${userName}%' or real_name like '%${userName}%') 
    	</if>
    	<if test="stateCd != '00F' ">
    		AND state_cd = #{stateCd} 
    	</if>
    	<if test="privnceId != null"> 
    		and exists (select 1 from t_province_city a where a.id = t.city_id and a.pid= #{privnceId}) 
    	</if>
    	<if test="storeIds !=null"> 
    		and exists (select 1 from sh_user_store_rela b where b.id in (${storeIds}) and b.user_id = t.user_id)  
    	</if>
    	<!-- 
    	<if test="date1 != null and date2!=null">
    		AND create_date BETWEEN #{date1} AND date_add(#{date2},interval 1 day)
    	</if> -->
    	<if test="custId != null"> 
    		 and cust_id=#{custId} AND t.user_id IN (SELECT u.user_id FROM sh_store s,sh_user_store_rela u WHERE u.id=s.id AND s.store_code in (${storeCode}))   
    	</if>
    	order by create_date desc
  </select>
    <select id="getRoleList"   resultType="Role">
    	SELECT
    	t.role_id as roleId,
    	t.role_name as roleName
    	FROM t_role t where
        t.state_cd='00A'
    ORDER BY create_date DESC
  </select>
  <select id="getUserIdBypasswordandusername" parameterType="map" resultType="Long">
  		select user_id from t_user where user_name=#{name} and password =#{password}
  </select>
  <update id="editContact_phone" >
  	 UPDATE t_cust_contact_info SET contact_name = #{realName},contact_phone = #{contactPhone} WHERE user_id = #{userId}
  </update>
  <select id="getuserPwdErrorNum" parameterType="map" resultType="com.zp.sys.entity.User">
  	SELECT user_id userId,user_name userName,state_cd stateCd,endEdit_pwd_time,pwd_error_time,pwd_errer_number FROM t_user WHERE user_name = #{userName}
	UNION ALL
	SELECT user_id userId,user_name userName,state_cd stateCd,endEdit_pwd_time,pwd_error_time,pwd_errer_number FROM t_user WHERE user_name = #{userName} AND pwd_error_time > date_add(NOW(), interval -1 day) <!-- (now()-1) -->
  </select>
  <update id="setPwdErrorTimeAndNum" parameterType="map">
	  <if test="'timeAndnum' == type">
	  	update t_user set pwd_error_time = now(),pwd_errer_number = #{num} where user_id = #{userId}
	  </if>
	  <if test="'num' == type">
	  	update t_user set  pwd_errer_number = #{num} where user_id = #{userId}
	  </if>
	  <if test="'00X' == type">
	  	update t_user set  state_cd = '00X',pwd_errer_number = #{num} where user_id = #{userId}
	  </if>
	  <if test="'EditTime' == type">
	  	update t_user set endEdit_pwd_time = now(),pwd_errer_number = null,pwd_error_time = null,old_password=#{oldPassword} where user_id = #{userId}
	  </if>
  </update>
  <select id="getoldPassword" parameterType="map" resultType="String">
  	select old_password oldPassword from t_user where user_id = #{id}
  </select>
  <insert id="insertUserCity" parameterType="map">
  insert into t_user_city(user_id,id)
  values(#{userId},#{cityId})
  </insert>
  <delete id="deleteUserCity" parameterType="com.zp.sys.entity.User">
 	delete from t_user_city where user_id=#{userId}
 </delete>
</mapper>